document.querySelector('mutation-test-report-app').report = {"files":{"/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/src/app.js":{"language":"javascript","mutants":[{"id":"0","location":{"end":{"column":29,"line":8},"start":{"column":14,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1","location":{"end":{"column":27,"line":8},"start":{"column":24,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"const express = require('express');\nconst cors = require('cors');\nconst routes = require('./routes');\n\nconst app = express();\n\n\napp.use(cors({ origin: \"*\" }));\napp.use(express.json());\n\napp.use(routes);\n\nmodule.exports = app;\n"},"/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/src/controllers/AddressController.js":{"language":"javascript","mutants":[{"id":"2","location":{"end":{"column":2,"line":67},"start":{"column":18,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"RuntimeError","description":"Error message: undefinedRoute.get() requires a callback function but got a [object Undefined] Error: Route.get() requires a callback function but got a [object Undefined]\n    at Route.(anonymous function) [as get] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express/lib/router/route.js:202:15)\n    at Function.get (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express/lib/router/index.js:510:19)\n    at Object.<anonymous>.routes.group.router (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/routes/index.js:81:12)\n    at Function.group (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express-group-routes/index.js:16:5)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/routes/index.js:75:8)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.require [as requireModuleOrMock] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/app.js:60:16)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.require [as requireModuleOrMock] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/app.test.js:4:13)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at jasmine2 (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-jasmine2/build/index.js:228:13)\n    at runTestInternal (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runner/build/runTest.js:385:22)"},{"id":"7","location":{"end":{"column":6,"line":15},"start":{"column":35,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4","location":{"end":{"column":55,"line":5},"start":{"column":44,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test addresses routes Get the addresses"},{"id":"5","location":{"end":{"column":67,"line":5},"start":{"column":64,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"6","location":{"end":{"column":48,"line":7},"start":{"column":30,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Test addresses routes Get the addresses"},{"id":"9","location":{"end":{"column":67,"line":12},"start":{"column":63,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"8","location":{"end":{"column":55,"line":12},"start":{"column":44,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"10","location":{"end":{"column":58,"line":14},"start":{"column":42,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"11","location":{"end":{"column":6,"line":31},"start":{"column":36,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"12","location":{"end":{"column":50,"line":19},"start":{"column":39,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"13","location":{"end":{"column":10,"line":28},"start":{"column":59,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"14","location":{"end":{"column":124,"line":30},"start":{"column":42,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"15","location":{"end":{"column":122,"line":30},"start":{"column":49,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"16","location":{"end":{"column":6,"line":55},"start":{"column":37,"line":32}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"17","location":{"end":{"column":53,"line":37},"start":{"column":42,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"18","location":{"end":{"column":24,"line":38},"start":{"column":20,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"19","location":{"end":{"column":14,"line":48},"start":{"column":21,"line":39}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"20","location":{"end":{"column":26,"line":50},"start":{"column":13,"line":50}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"21","location":{"end":{"column":26,"line":50},"start":{"column":13,"line":50}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"22","location":{"end":{"column":26,"line":50},"start":{"column":13,"line":50}},"mutatorName":"EqualityOperator","replacement":"address !== 0","status":"Survived"},{"id":"23","location":{"end":{"column":10,"line":52},"start":{"column":28,"line":50}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"24","location":{"end":{"column":79,"line":51},"start":{"column":46,"line":51}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"25","location":{"end":{"column":77,"line":51},"start":{"column":55,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"26","location":{"end":{"column":124,"line":54},"start":{"column":42,"line":54}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"27","location":{"end":{"column":122,"line":54},"start":{"column":49,"line":54}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3","location":{"end":{"column":6,"line":8},"start":{"column":36,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"28","location":{"end":{"column":6,"line":66},"start":{"column":38,"line":56}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"29","location":{"end":{"column":53,"line":59},"start":{"column":42,"line":59}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"30","location":{"end":{"column":65,"line":59},"start":{"column":61,"line":59}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"31","location":{"end":{"column":26,"line":61},"start":{"column":13,"line":61}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"32","location":{"end":{"column":26,"line":61},"start":{"column":13,"line":61}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"33","location":{"end":{"column":26,"line":61},"start":{"column":13,"line":61}},"mutatorName":"EqualityOperator","replacement":"address !== 0","status":"Survived"},{"id":"35","location":{"end":{"column":77,"line":62},"start":{"column":46,"line":62}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"36","location":{"end":{"column":75,"line":62},"start":{"column":55,"line":62}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"34","location":{"end":{"column":10,"line":63},"start":{"column":28,"line":61}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"const connection = require('../database')\n\nmodule.exports = {\n    async index(request, response) {\n        const addresses = await connection('addresses').select('*')\n\n        return response.json({ msg: addresses });\n    },\n    async show(request, response) {\n        const { id } = request.params\n\n        const [address] = await connection('addresses').where('id', id).select()\n\n        return response.status(200).json({ msg: address })\n    },\n    async store(request, response) {\n        const { physicianId, type, zipcode, state, city, district, street, number } = request.body;\n\n        const [id] = await connection('addresses').insert({\n            physicianId,\n            type,\n            zipcode,\n            state,\n            city,\n            district,\n            street,\n            number\n        })\n\n        return response.status(201).json({ msg: { id, physicianId, type, zipcode, state, city, district, street, number } })\n    },\n    async update(request, response) {\n        const { id } = request.params\n\n        const { physicianId, type, zipcode, state, city, district, street, number } = request.body;\n\n        const address = await connection('addresses')\n            .where('id', id)\n            .update({\n                physicianId,\n                type,\n                zipcode,\n                state,\n                city,\n                district,\n                street,\n                number\n            })\n\n        if (address === 0) {\n            return response.status(406).json({ error: 'address not updated!' })\n        }\n\n        return response.status(200).json({ msg: { id, physicianId, type, zipcode, state, city, district, street, number } })\n    },\n    async destroy(request, response) {\n        const { id } = request.params\n\n        const address = await connection('addresses').where('id', id).delete()\n\n        if (address === 0) {\n            return response.status(406).json({ error: 'address not found!' })\n        }\n\n        return response.status(204).send()\n    }\n}\n"},"/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/src/controllers/ContactController.js":{"language":"javascript","mutants":[{"id":"37","location":{"end":{"column":2,"line":57},"start":{"column":18,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"RuntimeError","description":"Error message: undefinedRoute.get() requires a callback function but got a [object Undefined] Error: Route.get() requires a callback function but got a [object Undefined]\n    at Route.(anonymous function) [as get] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express/lib/router/route.js:202:15)\n    at Function.get (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express/lib/router/index.js:510:19)\n    at Object.<anonymous>.routes.group.router (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/routes/index.js:87:12)\n    at Function.group (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express-group-routes/index.js:16:5)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/routes/index.js:75:8)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.require [as requireModuleOrMock] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/app.js:60:16)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.require [as requireModuleOrMock] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/app.test.js:4:13)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at jasmine2 (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-jasmine2/build/index.js:228:13)\n    at runTestInternal (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runner/build/runTest.js:385:22)"},{"id":"40","location":{"end":{"column":65,"line":5},"start":{"column":62,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"39","location":{"end":{"column":53,"line":5},"start":{"column":43,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test contact routes Get the contacts"},{"id":"41","location":{"end":{"column":47,"line":7},"start":{"column":30,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Test contact routes Get the contacts"},{"id":"43","location":{"end":{"column":54,"line":12},"start":{"column":44,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test contact routes Get the created contact"},{"id":"44","location":{"end":{"column":66,"line":12},"start":{"column":62,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test contact routes Get the created contact"},{"id":"45","location":{"end":{"column":58,"line":14},"start":{"column":42,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Test contact routes Get the created contact"},{"id":"38","location":{"end":{"column":6,"line":8},"start":{"column":36,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"42","location":{"end":{"column":6,"line":15},"start":{"column":35,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"46","location":{"end":{"column":6,"line":26},"start":{"column":36,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"47","location":{"end":{"column":49,"line":19},"start":{"column":39,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"48","location":{"end":{"column":10,"line":23},"start":{"column":58,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"49","location":{"end":{"column":85,"line":25},"start":{"column":42,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"52","location":{"end":{"column":51,"line":32},"start":{"column":41,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test contact routes Update the contact"},{"id":"50","location":{"end":{"column":83,"line":25},"start":{"column":49,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"51","location":{"end":{"column":6,"line":45},"start":{"column":37,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"56","location":{"end":{"column":25,"line":40},"start":{"column":13,"line":40}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"57","location":{"end":{"column":25,"line":40},"start":{"column":13,"line":40}},"mutatorName":"EqualityOperator","replacement":"result !== 0","status":"Killed","description":"Killed by: Test contact routes Update the contact"},{"id":"58","location":{"end":{"column":10,"line":42},"start":{"column":27,"line":40}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"60","location":{"end":{"column":77,"line":41},"start":{"column":55,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"59","location":{"end":{"column":79,"line":41},"start":{"column":46,"line":41}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"53","location":{"end":{"column":24,"line":33},"start":{"column":20,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"54","location":{"end":{"column":14,"line":38},"start":{"column":21,"line":34}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"55","location":{"end":{"column":25,"line":40},"start":{"column":13,"line":40}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout"},{"id":"64","location":{"end":{"column":51,"line":49},"start":{"column":41,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test contact routes Delete the contact"},{"id":"68","location":{"end":{"column":25,"line":51},"start":{"column":13,"line":51}},"mutatorName":"EqualityOperator","replacement":"result !== 0","status":"Killed","description":"Killed by: Test contact routes Delete the contact"},{"id":"65","location":{"end":{"column":63,"line":49},"start":{"column":59,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test contact routes Delete the contact"},{"id":"61","location":{"end":{"column":85,"line":44},"start":{"column":42,"line":44}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Test contact routes Update the contact"},{"id":"62","location":{"end":{"column":83,"line":44},"start":{"column":49,"line":44}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Test contact routes Update the contact"},{"id":"69","location":{"end":{"column":10,"line":53},"start":{"column":27,"line":51}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"66","location":{"end":{"column":25,"line":51},"start":{"column":13,"line":51}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: Test contact routes Delete the contact"},{"id":"67","location":{"end":{"column":25,"line":51},"start":{"column":13,"line":51}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"63","location":{"end":{"column":6,"line":56},"start":{"column":38,"line":46}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Test contact routes Delete the contact"},{"id":"71","location":{"end":{"column":75,"line":52},"start":{"column":55,"line":52}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"70","location":{"end":{"column":77,"line":52},"start":{"column":46,"line":52}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"const connection = require('../database')\n\nmodule.exports = {\n    async index(request, response) {\n        const contacts = await connection('contacts').select('*')\n\n        return response.json({ msg: contacts });\n    },\n    async show(request, response) {\n        const { id } = request.params\n\n        const [contact] = await connection('contacts').where('id', id).select()\n\n        return response.status(200).json({ msg: contact })\n    },\n    async store(request, response) {\n        const { physicianId, type, contact } = request.body;\n\n        const [id] = await connection('contacts').insert({\n            physicianId,\n            type,\n            contact\n        })\n\n        return response.status(201).json({ msg: { id, physicianId, type, contact } })\n    },\n    async update(request, response) {\n        const { id } = request.params\n\n        const { physicianId, type, contact } = request.body;\n\n        const result = await connection('contacts')\n            .where('id', id)\n            .update({\n                physicianId,\n                type,\n                contact\n            })\n\n        if (result === 0) {\n            return response.status(406).json({ error: 'contact not updated!' })\n        }\n\n        return response.status(200).json({ msg: { id, physicianId, type, contact } })\n    },\n    async destroy(request, response) {\n        const { id } = request.params\n\n        const result = await connection('contacts').where('id', id).delete()\n\n        if (result === 0) {\n            return response.status(406).json({ error: 'contact not found!' })\n        }\n\n        return response.status(204).send()\n    }\n}\n"},"/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/src/controllers/PhysicianController.js":{"language":"javascript","mutants":[{"id":"72","location":{"end":{"column":2,"line":57},"start":{"column":18,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"RuntimeError","description":"Error message: undefinedRoute.get() requires a callback function but got a [object Undefined] Error: Route.get() requires a callback function but got a [object Undefined]\n    at Route.(anonymous function) [as get] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express/lib/router/route.js:202:15)\n    at Function.get (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express/lib/router/index.js:510:19)\n    at Object.<anonymous>.routes.group.router (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/routes/index.js:93:12)\n    at Function.group (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express-group-routes/index.js:16:5)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/routes/index.js:75:8)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.require [as requireModuleOrMock] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/app.js:60:16)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.require [as requireModuleOrMock] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/app.test.js:4:13)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at jasmine2 (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-jasmine2/build/index.js:228:13)\n    at runTestInternal (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runner/build/runTest.js:385:22)"},{"id":"73","location":{"end":{"column":6,"line":8},"start":{"column":36,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"74","location":{"end":{"column":57,"line":5},"start":{"column":45,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"75","location":{"end":{"column":69,"line":5},"start":{"column":66,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"76","location":{"end":{"column":49,"line":7},"start":{"column":30,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"78","location":{"end":{"column":58,"line":12},"start":{"column":46,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test physicians routes Get the created physician"},{"id":"79","location":{"end":{"column":70,"line":12},"start":{"column":66,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test physicians routes Get the created physician"},{"id":"80","location":{"end":{"column":60,"line":14},"start":{"column":42,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Test physicians routes Get the created physician"},{"id":"77","location":{"end":{"column":6,"line":15},"start":{"column":35,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Test physicians routes Get the created physician"},{"id":"87","location":{"end":{"column":56,"line":32},"start":{"column":44,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test physicians routes Update the physician"},{"id":"86","location":{"end":{"column":6,"line":45},"start":{"column":37,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Test physicians routes Update the physician"},{"id":"88","location":{"end":{"column":24,"line":33},"start":{"column":20,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test physicians routes Update the physician"},{"id":"89","location":{"end":{"column":14,"line":38},"start":{"column":21,"line":34}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Test physicians routes Update the physician"},{"id":"90","location":{"end":{"column":28,"line":40},"start":{"column":13,"line":40}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: Test physicians routes Update the physician"},{"id":"91","location":{"end":{"column":28,"line":40},"start":{"column":13,"line":40}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"81","location":{"end":{"column":6,"line":26},"start":{"column":36,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"92","location":{"end":{"column":28,"line":40},"start":{"column":13,"line":40}},"mutatorName":"EqualityOperator","replacement":"physician !== 0","status":"Killed","description":"Killed by: Test physicians routes Update the physician"},{"id":"82","location":{"end":{"column":51,"line":19},"start":{"column":39,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"83","location":{"end":{"column":10,"line":23},"start":{"column":60,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"84","location":{"end":{"column":73,"line":25},"start":{"column":42,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"93","location":{"end":{"column":10,"line":42},"start":{"column":30,"line":40}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"85","location":{"end":{"column":71,"line":25},"start":{"column":49,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"95","location":{"end":{"column":79,"line":41},"start":{"column":55,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"99","location":{"end":{"column":56,"line":49},"start":{"column":44,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"101","location":{"end":{"column":28,"line":51},"start":{"column":13,"line":51}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"102","location":{"end":{"column":28,"line":51},"start":{"column":13,"line":51}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"94","location":{"end":{"column":81,"line":41},"start":{"column":46,"line":41}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"103","location":{"end":{"column":28,"line":51},"start":{"column":13,"line":51}},"mutatorName":"EqualityOperator","replacement":"physician !== 0","status":"Survived"},{"id":"96","location":{"end":{"column":73,"line":44},"start":{"column":42,"line":44}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Test physicians routes Update the physician"},{"id":"97","location":{"end":{"column":71,"line":44},"start":{"column":49,"line":44}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Test physicians routes Update the physician"},{"id":"98","location":{"end":{"column":6,"line":56},"start":{"column":38,"line":46}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"100","location":{"end":{"column":68,"line":49},"start":{"column":64,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"104","location":{"end":{"column":10,"line":53},"start":{"column":30,"line":51}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"105","location":{"end":{"column":79,"line":52},"start":{"column":46,"line":52}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"106","location":{"end":{"column":77,"line":52},"start":{"column":55,"line":52}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"const connection = require('../database')\n\nmodule.exports = {\n    async index(request, response) {\n        const physicians = await connection('physicians').select('*')\n\n        return response.json({ msg: physicians });\n    },\n    async show(request, response) {\n        const { id } = request.params\n\n        const [physician] = await connection('physicians').where('id', id).select()\n\n        return response.status(200).json({ msg: physician })\n    },\n    async store(request, response) {\n        const { name, crm, cpf } = request.body;\n\n        const [id] = await connection('physicians').insert({\n            name,\n            crm,\n            cpf\n        })\n\n        return response.status(201).json({ msg: { id, name, crm, cpf } })\n    },\n    async update(request, response) {\n        const { id } = request.params\n\n        const { name, crm, cpf } = request.body;\n\n        const physician = await connection('physicians')\n            .where('id', id)\n            .update({\n                name,\n                crm,\n                cpf\n            })\n\n        if (physician === 0) {\n            return response.status(406).json({ error: 'Physician not updated!' })\n        }\n\n        return response.status(200).json({ msg: { id, name, crm, cpf } })\n    },\n    async destroy(request, response) {\n        const { id } = request.params\n\n        const physician = await connection('physicians').where('id', id).delete()\n\n        if (physician === 0) {\n            return response.status(406).json({ error: 'Physician not found!' })\n        }\n\n        return response.status(204).send()\n    }\n}\n"},"/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/src/controllers/PhysicianSpecialtyController.js":{"language":"javascript","mutants":[{"id":"107","location":{"end":{"column":2,"line":55},"start":{"column":18,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"RuntimeError","description":"Error message: undefinedRoute.get() requires a callback function but got a [object Undefined] Error: Route.get() requires a callback function but got a [object Undefined]\n    at Route.(anonymous function) [as get] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express/lib/router/route.js:202:15)\n    at Function.get (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express/lib/router/index.js:510:19)\n    at Object.<anonymous>.routes.group.router (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/routes/index.js:99:12)\n    at Function.group (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express-group-routes/index.js:16:5)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/routes/index.js:75:8)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.require [as requireModuleOrMock] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/app.js:60:16)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.require [as requireModuleOrMock] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/app.test.js:4:13)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at jasmine2 (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-jasmine2/build/index.js:228:13)\n    at runTestInternal (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runner/build/runTest.js:385:22)"},{"id":"110","location":{"end":{"column":90,"line":5},"start":{"column":87,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"109","location":{"end":{"column":78,"line":5},"start":{"column":55,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test physician specialty routes Get the physician specialties"},{"id":"111","location":{"end":{"column":59,"line":7},"start":{"column":30,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Test physician specialty routes Get the physician specialties"},{"id":"113","location":{"end":{"column":78,"line":12},"start":{"column":55,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test physician specialty routes Get the created physician specialty"},{"id":"114","location":{"end":{"column":90,"line":12},"start":{"column":86,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test physician specialty routes Get the created physician specialty"},{"id":"115","location":{"end":{"column":69,"line":14},"start":{"column":42,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Test physician specialty routes Get the created physician specialty"},{"id":"108","location":{"end":{"column":6,"line":8},"start":{"column":36,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"112","location":{"end":{"column":6,"line":15},"start":{"column":35,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"121","location":{"end":{"column":6,"line":43},"start":{"column":37,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"122","location":{"end":{"column":76,"line":31},"start":{"column":53,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"123","location":{"end":{"column":24,"line":32},"start":{"column":20,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"124","location":{"end":{"column":14,"line":36},"start":{"column":21,"line":33}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"125","location":{"end":{"column":38,"line":38},"start":{"column":13,"line":38}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"126","location":{"end":{"column":38,"line":38},"start":{"column":13,"line":38}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"116","location":{"end":{"column":6,"line":25},"start":{"column":36,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"117","location":{"end":{"column":62,"line":19},"start":{"column":39,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"127","location":{"end":{"column":38,"line":38},"start":{"column":13,"line":38}},"mutatorName":"EqualityOperator","replacement":"physician_specialty !== 0","status":"Survived"},{"id":"119","location":{"end":{"column":85,"line":24},"start":{"column":42,"line":24}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"118","location":{"end":{"column":10,"line":22},"start":{"column":71,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"128","location":{"end":{"column":10,"line":40},"start":{"column":40,"line":38}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"120","location":{"end":{"column":83,"line":24},"start":{"column":49,"line":24}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"131","location":{"end":{"column":85,"line":42},"start":{"column":42,"line":42}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"134","location":{"end":{"column":76,"line":47},"start":{"column":53,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test physician specialty routes Delete the physician specialty"},{"id":"136","location":{"end":{"column":37,"line":49},"start":{"column":13,"line":49}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: Test physician specialty routes Delete the physician specialty"},{"id":"137","location":{"end":{"column":37,"line":49},"start":{"column":13,"line":49}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"129","location":{"end":{"column":91,"line":39},"start":{"column":46,"line":39}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"130","location":{"end":{"column":89,"line":39},"start":{"column":55,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"138","location":{"end":{"column":37,"line":49},"start":{"column":13,"line":49}},"mutatorName":"EqualityOperator","replacement":"physicianSpecialty !== 0","status":"Killed","description":"Killed by: Test physician specialty routes Delete the physician specialty"},{"id":"132","location":{"end":{"column":83,"line":42},"start":{"column":49,"line":42}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"139","location":{"end":{"column":10,"line":51},"start":{"column":39,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"135","location":{"end":{"column":88,"line":47},"start":{"column":84,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test physician specialty routes Delete the physician specialty"},{"id":"140","location":{"end":{"column":89,"line":50},"start":{"column":46,"line":50}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"141","location":{"end":{"column":87,"line":50},"start":{"column":55,"line":50}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"133","location":{"end":{"column":6,"line":54},"start":{"column":38,"line":44}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"}],"source":"const connection = require('../database')\n\nmodule.exports = {\n    async index(request, response) {\n        const physicianSpecialties = await connection('physician_specialties').select('*')\n\n        return response.json({ msg: physicianSpecialties });\n    },\n    async show(request, response) {\n        const { id } = request.params\n\n        const [physicianSpecialty] = await connection('physician_specialties').where('id', id).select()\n\n        return response.status(200).json({ msg: physicianSpecialty })\n    },\n    async store(request, response) {\n        const { physicianId, specialtiesId } = request.body;\n\n        const [id] = await connection('physician_specialties').insert({\n            physicianId,\n            specialtiesId\n        })\n\n        return response.status(201).json({ msg: { id, physicianId, specialtiesId } })\n    },\n    async update(request, response) {\n        const { id } = request.params\n\n        const { physicianId, specialtiesId } = request.body;\n\n        const physicianSpecialty = await connection('physician_specialties')\n            .where('id', id)\n            .update({\n                physicianId,\n                specialtiesId\n            })\n\n        if (physician_specialty === 0) {\n            return response.status(406).json({ error: 'physician_specialty not updated!' })\n        }\n\n        return response.status(200).json({ msg: { id, physicianId, specialtiesId } })\n    },\n    async destroy(request, response) {\n        const { id } = request.params\n\n        const physicianSpecialty = await connection('physician_specialties').where('id', id).delete()\n\n        if (physicianSpecialty === 0) {\n            return response.status(406).json({ error: 'physician_specialty not found!' })\n        }\n\n        return response.status(204).send()\n    }\n}\n"},"/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/src/controllers/ProfileController.js":{"language":"javascript","mutants":[{"id":"142","location":{"end":{"column":2,"line":38},"start":{"column":18,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"RuntimeError","description":"Error message: undefinedRoute.get() requires a callback function but got a [object Undefined] Error: Route.get() requires a callback function but got a [object Undefined]\n    at Route.(anonymous function) [as get] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express/lib/router/route.js:202:15)\n    at Function.get (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express/lib/router/index.js:510:19)\n    at Object.<anonymous>.routes.group.router (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/routes/index.js:105:12)\n    at Function.group (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express-group-routes/index.js:16:5)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/routes/index.js:75:8)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.require [as requireModuleOrMock] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/app.js:60:16)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.require [as requireModuleOrMock] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/app.test.js:4:13)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at jasmine2 (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-jasmine2/build/index.js:228:13)\n    at runTestInternal (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runner/build/runTest.js:385:22)"},{"id":"143","location":{"end":{"column":6,"line":8},"start":{"column":36,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"144","location":{"end":{"column":54,"line":5},"start":{"column":42,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"145","location":{"end":{"column":66,"line":5},"start":{"column":63,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"146","location":{"end":{"column":46,"line":7},"start":{"column":30,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"147","location":{"end":{"column":6,"line":28},"start":{"column":35,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"148","location":{"end":{"column":58,"line":13},"start":{"column":46,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"149","location":{"end":{"column":70,"line":13},"start":{"column":66,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"150","location":{"end":{"column":55,"line":15},"start":{"column":44,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"151","location":{"end":{"column":76,"line":15},"start":{"column":63,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"152","location":{"end":{"column":53,"line":17},"start":{"column":43,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"153","location":{"end":{"column":74,"line":17},"start":{"column":61,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"154","location":{"end":{"column":69,"line":19},"start":{"column":46,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"155","location":{"end":{"column":32,"line":20},"start":{"column":19,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"156","location":{"end":{"column":50,"line":20},"start":{"column":34,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"157","location":{"end":{"column":55,"line":20},"start":{"column":52,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"158","location":{"end":{"column":94,"line":20},"start":{"column":57,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"160","location":{"end":{"column":14,"line":25},"start":{"column":21,"line":22}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"161","location":{"end":{"column":42,"line":23},"start":{"column":17,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"162","location":{"end":{"column":35,"line":24},"start":{"column":17,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"163","location":{"end":{"column":98,"line":27},"start":{"column":42,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"164","location":{"end":{"column":96,"line":27},"start":{"column":49,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"165","location":{"end":{"column":6,"line":31},"start":{"column":36,"line":29}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"166","location":{"end":{"column":53,"line":30},"start":{"column":30,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"167","location":{"end":{"column":51,"line":30},"start":{"column":37,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"168","location":{"end":{"column":6,"line":34},"start":{"column":37,"line":32}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"169","location":{"end":{"column":53,"line":33},"start":{"column":30,"line":33}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"170","location":{"end":{"column":51,"line":33},"start":{"column":37,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"159","location":{"end":{"column":33,"line":21},"start":{"column":20,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"171","location":{"end":{"column":6,"line":37},"start":{"column":38,"line":35}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"172","location":{"end":{"column":53,"line":36},"start":{"column":30,"line":36}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"173","location":{"end":{"column":51,"line":36},"start":{"column":37,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"const connection = require('../database')\n\nmodule.exports = {\n    async index(request, response) {\n        const results = await connection('physicians').select('*')\n\n        return response.json({ msg: results });\n    },\n\n    async show(request, response) {\n        const { id } = request.params\n\n        const [physician] = await connection('physicians').where('id', id).select()\n\n        const addresses = await connection('addresses').where('physicianId', id).select()\n\n        const contacts = await connection('contacts').where('physicianId', id).select()\n\n        const specialties = await connection('physician_specialties')\n            .join('specialties', 'specialties.id', '=', 'physician_specialties.specialtiesId')\n            .where('physicianId', id)\n            .select([\n                'physician_specialties.*',\n                'specialties.name'\n            ])\n\n        return response.status(200).json({ msg: { physician, addresses, contacts, specialties } })\n    },\n    async store(request, response) {\n        return response.json({ msg: 'Hello World!' });\n    },\n    async update(request, response) {\n        return response.json({ msg: 'Hello World!' });\n    },\n    async destroy(request, response) {\n        return response.json({ msg: 'Hello World!' });\n    }\n}\n"},"/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/src/controllers/SpecialtyController.js":{"language":"javascript","mutants":[{"id":"174","location":{"end":{"column":2,"line":53},"start":{"column":18,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"RuntimeError","description":"Error message: undefinedRoute.get() requires a callback function but got a [object Undefined] Error: Route.get() requires a callback function but got a [object Undefined]\n    at Route.(anonymous function) [as get] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express/lib/router/route.js:202:15)\n    at Function.get (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express/lib/router/index.js:510:19)\n    at Object.<anonymous>.routes.group.router (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/routes/index.js:111:12)\n    at Function.group (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/express-group-routes/index.js:16:5)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/routes/index.js:75:8)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.require [as requireModuleOrMock] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/app.js:60:16)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at Runtime.require [as requireModuleOrMock] (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:826:21)\n    at Object.<anonymous> (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/.stryker-tmp/sandbox4907088/src/app.test.js:4:13)\n    at Runtime._execModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runtime/build/index.js:662:10)\n    at jasmine2 (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-jasmine2/build/index.js:228:13)\n    at runTestInternal (/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/node_modules/jest-runner/build/runTest.js:385:22)"},{"id":"175","location":{"end":{"column":6,"line":8},"start":{"column":36,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"176","location":{"end":{"column":59,"line":5},"start":{"column":46,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"177","location":{"end":{"column":71,"line":5},"start":{"column":68,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"178","location":{"end":{"column":50,"line":7},"start":{"column":30,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"180","location":{"end":{"column":59,"line":12},"start":{"column":46,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test specialties routes Get the created specialty"},{"id":"181","location":{"end":{"column":71,"line":12},"start":{"column":67,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test specialties routes Get the created specialty"},{"id":"182","location":{"end":{"column":60,"line":14},"start":{"column":42,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Test specialties routes Get the created specialty"},{"id":"179","location":{"end":{"column":6,"line":15},"start":{"column":35,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Test specialties routes Get the created specialty"},{"id":"189","location":{"end":{"column":57,"line":30},"start":{"column":44,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test specialties routes Update the specialty"},{"id":"188","location":{"end":{"column":6,"line":41},"start":{"column":37,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: Test specialties routes Update the specialty"},{"id":"190","location":{"end":{"column":24,"line":31},"start":{"column":20,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test specialties routes Update the specialty"},{"id":"191","location":{"end":{"column":14,"line":34},"start":{"column":21,"line":32}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Test specialties routes Update the specialty"},{"id":"192","location":{"end":{"column":28,"line":36},"start":{"column":13,"line":36}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: Test specialties routes Update the specialty"},{"id":"193","location":{"end":{"column":28,"line":36},"start":{"column":13,"line":36}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"194","location":{"end":{"column":28,"line":36},"start":{"column":13,"line":36}},"mutatorName":"EqualityOperator","replacement":"specialty !== 0","status":"Killed","description":"Killed by: Test specialties routes Update the specialty"},{"id":"183","location":{"end":{"column":6,"line":24},"start":{"column":36,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"184","location":{"end":{"column":52,"line":19},"start":{"column":39,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"185","location":{"end":{"column":10,"line":21},"start":{"column":61,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"186","location":{"end":{"column":63,"line":23},"start":{"column":42,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"195","location":{"end":{"column":10,"line":38},"start":{"column":30,"line":36}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"187","location":{"end":{"column":61,"line":23},"start":{"column":49,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"196","location":{"end":{"column":81,"line":37},"start":{"column":46,"line":37}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"201","location":{"end":{"column":57,"line":45},"start":{"column":44,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"203","location":{"end":{"column":28,"line":47},"start":{"column":13,"line":47}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"204","location":{"end":{"column":28,"line":47},"start":{"column":13,"line":47}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"197","location":{"end":{"column":79,"line":37},"start":{"column":55,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"205","location":{"end":{"column":28,"line":47},"start":{"column":13,"line":47}},"mutatorName":"EqualityOperator","replacement":"specialty !== 0","status":"Survived"},{"id":"198","location":{"end":{"column":63,"line":40},"start":{"column":42,"line":40}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Test specialties routes Update the specialty"},{"id":"199","location":{"end":{"column":61,"line":40},"start":{"column":49,"line":40}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: Test specialties routes Update the specialty"},{"id":"200","location":{"end":{"column":6,"line":52},"start":{"column":38,"line":42}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"206","location":{"end":{"column":10,"line":49},"start":{"column":30,"line":47}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"202","location":{"end":{"column":69,"line":45},"start":{"column":65,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"208","location":{"end":{"column":77,"line":48},"start":{"column":55,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"207","location":{"end":{"column":79,"line":48},"start":{"column":46,"line":48}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"const connection = require('../database')\n\nmodule.exports = {\n    async index(request, response) {\n        const specialties = await connection('specialties').select('*')\n\n        return response.json({ msg: specialties });\n    },\n    async show(request, response) {\n        const { id } = request.params\n\n        const [specialty] = await connection('specialties').where('id', id).select()\n\n        return response.status(200).json({ msg: specialty })\n    },\n    async store(request, response) {\n        const { name } = request.body;\n\n        const [id] = await connection('specialties').insert({\n            name\n        })\n\n        return response.status(201).json({ msg: { id, name } })\n    },\n    async update(request, response) {\n        const { id } = request.params\n\n        const { name } = request.body;\n\n        const specialty = await connection('specialties')\n            .where('id', id)\n            .update({\n                name\n            })\n\n        if (specialty === 0) {\n            return response.status(406).json({ error: 'specialty not updated!' })\n        }\n\n        return response.status(200).json({ msg: { id, name } })\n    },\n    async destroy(request, response) {\n        const { id } = request.params\n\n        const specialty = await connection('specialties').where('id', id).delete()\n\n        if (specialty === 0) {\n            return response.status(406).json({ error: 'specialty not found!' })\n        }\n\n        return response.status(204).send()\n    }\n}\n"},"/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/src/database/migrations/20200410210056_create_physicians.js":{"language":"javascript","mutants":[{"id":"209","location":{"end":{"column":2,"line":10},"start":{"column":30,"line":2}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"210","location":{"end":{"column":48,"line":3},"start":{"column":36,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"211","location":{"end":{"column":6,"line":9},"start":{"column":67,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"212","location":{"end":{"column":30,"line":4},"start":{"column":26,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"213","location":{"end":{"column":28,"line":5},"start":{"column":22,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"214","location":{"end":{"column":27,"line":6},"start":{"column":22,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"215","location":{"end":{"column":27,"line":7},"start":{"column":22,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"216","location":{"end":{"column":31,"line":8},"start":{"column":23,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"217","location":{"end":{"column":61,"line":8},"start":{"column":57,"line":8}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"218","location":{"end":{"column":2,"line":14},"start":{"column":32,"line":12}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"219","location":{"end":{"column":46,"line":13},"start":{"column":34,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"\nexports.up = function (knex) {\n    return knex.schema.createTable('physicians', function (table) {\n        table.increments('id').primary()\n        table.string('name').notNullable()\n        table.string('crm').notNullable()\n        table.string('cpf', 11).notNullable()\n        table.boolean('status').notNullable().defaultTo(true)\n    })\n}\n\nexports.down = function (knex) {\n    return knex.schema.dropTable('physicians')\n}\n"},"/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/src/database/migrations/20200410210541_create_contacts.js":{"language":"javascript","mutants":[{"id":"221","location":{"end":{"column":46,"line":3},"start":{"column":36,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"220","location":{"end":{"column":2,"line":14},"start":{"column":30,"line":2}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"222","location":{"end":{"column":6,"line":13},"start":{"column":65,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"223","location":{"end":{"column":30,"line":4},"start":{"column":26,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"224","location":{"end":{"column":36,"line":5},"start":{"column":23,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"225","location":{"end":{"column":29,"line":8},"start":{"column":25,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"226","location":{"end":{"column":34,"line":9},"start":{"column":22,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"227","location":{"end":{"column":32,"line":10},"start":{"column":23,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"228","location":{"end":{"column":28,"line":11},"start":{"column":22,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"230","location":{"end":{"column":2,"line":18},"start":{"column":32,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"229","location":{"end":{"column":31,"line":12},"start":{"column":22,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"231","location":{"end":{"column":44,"line":17},"start":{"column":34,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"\nexports.up = function (knex) {\n    return knex.schema.createTable('contacts', function (table) {\n        table.increments('id').primary()\n        table.integer('physicianId')\n            .unsigned()\n            .notNullable()\n            .references('id')\n            .inTable('physicians')\n            .onDelete('CASCADE');\n        table.string('type').notNullable()\n        table.string('contact').notNullable()\n    })\n};\n\nexports.down = function (knex) {\n    return knex.schema.dropTable('contacts')\n};\n"},"/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/src/database/migrations/20200410210640_create_addresses.js":{"language":"javascript","mutants":[{"id":"232","location":{"end":{"column":2,"line":19},"start":{"column":30,"line":2}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"233","location":{"end":{"column":47,"line":3},"start":{"column":36,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"234","location":{"end":{"column":6,"line":18},"start":{"column":66,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"235","location":{"end":{"column":30,"line":4},"start":{"column":26,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"236","location":{"end":{"column":36,"line":5},"start":{"column":23,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"237","location":{"end":{"column":29,"line":8},"start":{"column":25,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"241","location":{"end":{"column":31,"line":12},"start":{"column":22,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"240","location":{"end":{"column":28,"line":11},"start":{"column":22,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"238","location":{"end":{"column":34,"line":9},"start":{"column":22,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"242","location":{"end":{"column":29,"line":13},"start":{"column":22,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"239","location":{"end":{"column":32,"line":10},"start":{"column":23,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"247","location":{"end":{"column":2,"line":24},"start":{"column":32,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"246","location":{"end":{"column":30,"line":17},"start":{"column":22,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"243","location":{"end":{"column":28,"line":14},"start":{"column":22,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"244","location":{"end":{"column":32,"line":15},"start":{"column":22,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"245","location":{"end":{"column":30,"line":16},"start":{"column":22,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"248","location":{"end":{"column":45,"line":22},"start":{"column":34,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"\nexports.up = function (knex) {\n    return knex.schema.createTable('addresses', function (table) {\n        table.increments('id').primary()\n        table.integer('physicianId')\n            .unsigned()\n            .notNullable()\n            .references('id')\n            .inTable('physicians')\n            .onDelete('CASCADE');\n        table.string('type').notNullable()\n        table.string('zipcode').notNullable()\n        table.string('state', 2).notNullable()\n        table.string('city').notNullable()\n        table.string('district').notNullable()\n        table.string('street').notNullable()\n        table.string('status').notNullable()\n    })\n};\n\nexports.down = function (knex) {\n    return knex.schema.dropTable('addresses')\n    //return knex.schema.dropTable('addresses')\n};\n"},"/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/src/database/migrations/20200410210742_create_specialties.js":{"language":"javascript","mutants":[{"id":"249","location":{"end":{"column":2,"line":8},"start":{"column":30,"line":2}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"250","location":{"end":{"column":49,"line":3},"start":{"column":36,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"252","location":{"end":{"column":30,"line":4},"start":{"column":26,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"254","location":{"end":{"column":31,"line":6},"start":{"column":23,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"251","location":{"end":{"column":6,"line":7},"start":{"column":68,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"255","location":{"end":{"column":61,"line":6},"start":{"column":57,"line":6}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"253","location":{"end":{"column":28,"line":5},"start":{"column":22,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"256","location":{"end":{"column":2,"line":12},"start":{"column":32,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"257","location":{"end":{"column":47,"line":11},"start":{"column":34,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"\nexports.up = function (knex) {\n    return knex.schema.createTable('specialties', function (table) {\n        table.increments('id').primary()\n        table.string('name').notNullable()\n        table.boolean('status').notNullable().defaultTo(true)\n    })\n};\n\nexports.down = function (knex) {\n    return knex.schema.dropTable('specialties')\n};\n"},"/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/src/database/migrations/20200410210844_create_physician_specialties.js":{"language":"javascript","mutants":[{"id":"258","location":{"end":{"column":2,"line":18},"start":{"column":30,"line":2}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"259","location":{"end":{"column":59,"line":3},"start":{"column":36,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"260","location":{"end":{"column":6,"line":17},"start":{"column":78,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"261","location":{"end":{"column":30,"line":4},"start":{"column":26,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"262","location":{"end":{"column":36,"line":5},"start":{"column":23,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"265","location":{"end":{"column":32,"line":10},"start":{"column":23,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"264","location":{"end":{"column":34,"line":9},"start":{"column":22,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"263","location":{"end":{"column":29,"line":8},"start":{"column":25,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"268","location":{"end":{"column":35,"line":15},"start":{"column":22,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"267","location":{"end":{"column":29,"line":14},"start":{"column":25,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"266","location":{"end":{"column":38,"line":11},"start":{"column":23,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"270","location":{"end":{"column":2,"line":22},"start":{"column":32,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"269","location":{"end":{"column":32,"line":16},"start":{"column":23,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"271","location":{"end":{"column":57,"line":21},"start":{"column":34,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"\nexports.up = function (knex) {\n    return knex.schema.createTable('physician_specialties', function (table) {\n        table.increments('id').primary()\n        table.integer('physicianId')\n            .unsigned()\n            .notNullable()\n            .references('id')\n            .inTable('physicians')\n            .onDelete('CASCADE');\n        table.integer('specialtiesId')\n            .unsigned()\n            .notNullable()\n            .references('id')\n            .inTable('specialties')\n            .onDelete('CASCADE');\n    })\n};\n\nexports.down = function (knex) {\n    return knex.schema.dropTable('physician_specialties')\n};\n"},"/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/src/index.js":{"language":"javascript","mutants":[{"id":"272","location":{"end":{"column":2,"line":7},"start":{"column":36,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"273","location":{"end":{"column":60,"line":6},"start":{"column":16,"line":6}},"mutatorName":"StringLiteral","replacement":"``","status":"Survived"}],"source":"require('dotenv/config');\n\nconst app = require(\"./app\");\n\napp.listen(process.env.PORT, () => {\n  console.info(`Running server on port ${process.env.PORT}`);\n});\n"},"/media/v8/DATA/ITA/ELE-2-2/CE-237/ce-237-mutation-test-demo/stryker-example/backend/src/routes/index.js":{"language":"javascript","mutants":[{"id":"278","location":{"end":{"column":29,"line":18},"start":{"column":17,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"277","location":{"end":{"column":32,"line":17},"start":{"column":16,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"276","location":{"end":{"column":28,"line":16},"start":{"column":16,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test addresses routes Get the addresses"},{"id":"279","location":{"end":{"column":32,"line":19},"start":{"column":16,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"280","location":{"end":{"column":35,"line":20},"start":{"column":19,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"285","location":{"end":{"column":34,"line":27},"start":{"column":19,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test contact routes Delete the contact"},{"id":"286","location":{"end":{"column":29,"line":30},"start":{"column":16,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"287","location":{"end":{"column":33,"line":31},"start":{"column":16,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test physicians routes Get the created physician"},{"id":"281","location":{"end":{"column":27,"line":23},"start":{"column":16,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test contact routes Get the contacts"},{"id":"282","location":{"end":{"column":31,"line":24},"start":{"column":16,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test contact routes Get the created contact"},{"id":"284","location":{"end":{"column":31,"line":26},"start":{"column":16,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test contact routes Update the contact"},{"id":"289","location":{"end":{"column":33,"line":33},"start":{"column":16,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test physicians routes Update the physician"},{"id":"290","location":{"end":{"column":36,"line":34},"start":{"column":19,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"275","location":{"end":{"column":2,"line":57},"start":{"column":34,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"274","location":{"end":{"column":20,"line":13},"start":{"column":14,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"283","location":{"end":{"column":28,"line":25},"start":{"column":17,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"294","location":{"end":{"column":43,"line":40},"start":{"column":16,"line":40}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"295","location":{"end":{"column":46,"line":41},"start":{"column":19,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test physician specialty routes Delete the physician specialty"},{"id":"291","location":{"end":{"column":39,"line":37},"start":{"column":16,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test physician specialty routes Get the physician specialties"},{"id":"292","location":{"end":{"column":43,"line":38},"start":{"column":16,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test physician specialty routes Get the created physician specialty"},{"id":"297","location":{"end":{"column":31,"line":45},"start":{"column":16,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"298","location":{"end":{"column":28,"line":46},"start":{"column":17,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"299","location":{"end":{"column":31,"line":47},"start":{"column":16,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"296","location":{"end":{"column":27,"line":44},"start":{"column":16,"line":44}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"300","location":{"end":{"column":34,"line":48},"start":{"column":19,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"301","location":{"end":{"column":30,"line":51},"start":{"column":16,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"288","location":{"end":{"column":30,"line":32},"start":{"column":17,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"302","location":{"end":{"column":34,"line":52},"start":{"column":16,"line":52}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test specialties routes Get the created specialty"},{"id":"304","location":{"end":{"column":34,"line":54},"start":{"column":16,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed","description":"Killed by: Test specialties routes Update the specialty"},{"id":"305","location":{"end":{"column":37,"line":55},"start":{"column":19,"line":55}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"293","location":{"end":{"column":40,"line":39},"start":{"column":17,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"303","location":{"end":{"column":31,"line":53},"start":{"column":17,"line":53}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"}],"source":"const express = require('express');\nconst routes = express.Router();\nrequire('express-group-routes');\n\n//Controllers\nconst AddressController = require('../controllers/AddressController');\nconst ContactController = require('../controllers/ContactController');\nconst PhysicianController = require('../controllers/PhysicianController');\nconst PhysicianSpecialtyController = require('../controllers/PhysicianSpecialtyController');\nconst ProfileController = require('../controllers/ProfileController');\nconst SpecialtyController = require('../controllers/SpecialtyController');\n\nroutes.group(\"/api\", (router) => {\n\n    //Addresses's routes\n    router.get(\"/addresses\", AddressController.index)\n    router.get(\"/addresses/:id\", AddressController.show)\n    router.post(\"/addresses\", AddressController.store)\n    router.put(\"/addresses/:id\", AddressController.update)\n    router.delete(\"/addresses/:id\", AddressController.destroy)\n\n    //Contacts's routes\n    router.get(\"/contacts\", ContactController.index)\n    router.get(\"/contacts/:id\", ContactController.show)\n    router.post(\"/contacts\", ContactController.store)\n    router.put(\"/contacts/:id\", ContactController.update)\n    router.delete(\"/contacts/:id\", ContactController.destroy)\n\n    //Physicians's routes\n    router.get(\"/physicians\", PhysicianController.index)\n    router.get(\"/physicians/:id\", PhysicianController.show)\n    router.post(\"/physicians\", PhysicianController.store)\n    router.put(\"/physicians/:id\", PhysicianController.update)\n    router.delete(\"/physicians/:id\", PhysicianController.destroy)\n\n    //PhysicianSpecialty's routes\n    router.get(\"/physicianspecialties\", PhysicianSpecialtyController.index)\n    router.get(\"/physicianspecialties/:id\", PhysicianSpecialtyController.show)\n    router.post(\"/physicianspecialties\", PhysicianSpecialtyController.store)\n    router.put(\"/physicianspecialties/:id\", PhysicianSpecialtyController.update)\n    router.delete(\"/physicianspecialties/:id\", PhysicianSpecialtyController.destroy)\n\n    //Profiles's routes\n    router.get(\"/profiles\", ProfileController.index)\n    router.get(\"/profiles/:id\", ProfileController.show)\n    router.post(\"/profiles\", ProfileController.store)\n    router.put(\"/profiles/:id\", ProfileController.update)\n    router.delete(\"/profiles/:id\", ProfileController.destroy)\n\n    //Specialties's routes\n    router.get(\"/specialties\", SpecialtyController.index)\n    router.get(\"/specialties/:id\", SpecialtyController.show)\n    router.post(\"/specialties\", SpecialtyController.store)\n    router.put(\"/specialties/:id\", SpecialtyController.update)\n    router.delete(\"/specialties/:id\", SpecialtyController.destroy)\n\n});\n\nmodule.exports = routes;\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};